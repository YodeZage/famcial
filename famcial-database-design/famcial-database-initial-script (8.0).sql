-- MySQL Script generated by MySQL Workbench
-- Wed Jul 22 21:17:19 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema famcial
-- -----------------------------------------------------
-- This schema for famcial application.

-- -----------------------------------------------------
-- Schema famcial
--
-- This schema for famcial application.
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `famcial` DEFAULT CHARACTER SET utf8 COLLATE utf8_bin ;
USE `famcial` ;

-- -----------------------------------------------------
-- Table `famcial`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`user` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for user table',
  `username` VARCHAR(100) NOT NULL COMMENT 'username for user to login',
  `password` VARCHAR(255) NOT NULL COMMENT 'password for user to login',
  `display_name` VARCHAR(100) NOT NULL COMMENT 'name displaied in the application',
  `sex` ENUM('male', 'female') NULL COMMENT 'sex for the user',
  `birthday` DATE NULL COMMENT 'birthday for the user',
  `note` VARCHAR(255) NULL COMMENT 'note for this user',
  `is_active` TINYINT(1) UNSIGNED NOT NULL DEFAULT 1 COMMENT 'to lock and unlock this user account',
  `create_time` DATETIME NOT NULL COMMENT 'create time for this user',
  `create_by` INT UNSIGNED NOT NULL COMMENT 'create person for this user',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `account_name_UNIQUE` (`username` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`session`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`session` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for session table',
  `user_id` INT UNSIGNED NOT NULL COMMENT 'user id for the session',
  `session_id` VARCHAR(255) NOT NULL COMMENT 'session id for user',
  `create_time` DATETIME NOT NULL COMMENT 'session created time',
  `update_time` DATETIME NOT NULL COMMENT 'last time to use this session',
  `duration` INT UNSIGNED NULL COMMENT 'validation time for this session',
  PRIMARY KEY (`id`),
  INDEX `fk_session_user_idx` (`user_id` ASC) VISIBLE,
  UNIQUE INDEX `session_id_UNIQUE` (`session_id` ASC) VISIBLE,
  CONSTRAINT `fk_session_user`
    FOREIGN KEY (`user_id`)
    REFERENCES `famcial`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`account`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`account` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for account table',
  `name` VARCHAR(100) NOT NULL COMMENT 'account name',
  `type` ENUM('cash', 'credit', 'debit', 'goal') NOT NULL COMMENT 'account type',
  `statement_date` DATE NULL COMMENT 'the statement data for credit debit or other type',
  `due_date` DATE NULL COMMENT 'the due data for credit or other type',
  `credit_limit` DECIMAL(13,4) NULL COMMENT 'the credit limit for credit type',
  `balance` DECIMAL(13,4) NOT NULL COMMENT 'the intial balance for this account',
  `note` VARCHAR(255) NULL COMMENT 'note for this account',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`member`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`member` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for membertable',
  `name` VARCHAR(100) NOT NULL COMMENT 'member name',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`store`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`store` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for store table',
  `name` VARCHAR(100) NOT NULL COMMENT 'store name',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`project`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`project` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for project table',
  `name` VARCHAR(100) NOT NULL COMMENT 'project name',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`category` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for category table',
  `name` VARCHAR(100) NOT NULL COMMENT 'categoty name',
  `type` ENUM('spend', 'income') NOT NULL COMMENT 'income category or spend category',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`sub_category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`sub_category` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for spend sub category table',
  `category_id` INT UNSIGNED NOT NULL COMMENT 'category id for the sub category',
  `name` VARCHAR(100) NOT NULL COMMENT 'sub category name',
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_sub_category_category1_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_sub_category_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `famcial`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`transaction`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`transaction` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'primary key for transaction table',
  `account_id` INT UNSIGNED NOT NULL COMMENT 'account id for the transaction',
  `category_id` INT UNSIGNED NOT NULL COMMENT 'category id for the transaction',
  `sub_category_id` INT UNSIGNED NULL COMMENT 'sub category id for the transaction',
  `member_id` INT UNSIGNED NOT NULL COMMENT 'member id for the transaction',
  `store_id` INT UNSIGNED NOT NULL COMMENT 'store id for the transaction',
  `project_id` INT UNSIGNED NOT NULL COMMENT 'project id for the transaction',
  `amount` DECIMAL(13,4) NOT NULL COMMENT 'amount for the transaction',
  `type` ENUM('spend', 'income', 'transaction', 'loan') NOT NULL COMMENT 'transaction type',
  `time` DATETIME NOT NULL COMMENT 'transaction time',
  PRIMARY KEY (`id`),
  INDEX `fk_transaction_account1_idx` (`account_id` ASC) VISIBLE,
  INDEX `fk_transaction_member1_idx` (`member_id` ASC) VISIBLE,
  INDEX `fk_transaction_store1_idx` (`store_id` ASC) VISIBLE,
  INDEX `fk_transaction_project1_idx` (`project_id` ASC) VISIBLE,
  INDEX `fk_transaction_category1_idx` (`category_id` ASC) VISIBLE,
  INDEX `fk_transaction_sub_category1_idx` (`sub_category_id` ASC) VISIBLE,
  CONSTRAINT `fk_transaction_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `famcial`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_member1`
    FOREIGN KEY (`member_id`)
    REFERENCES `famcial`.`member` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_store1`
    FOREIGN KEY (`store_id`)
    REFERENCES `famcial`.`store` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_project1`
    FOREIGN KEY (`project_id`)
    REFERENCES `famcial`.`project` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `famcial`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_transaction_sub_category1`
    FOREIGN KEY (`sub_category_id`)
    REFERENCES `famcial`.`sub_category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `famcial`.`user_account_permission`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `famcial`.`user_account_permission` (
  `user_id` INT UNSIGNED NOT NULL COMMENT 'one of the primary key for this table',
  `account_id` INT UNSIGNED NOT NULL COMMENT 'one of the primary key for this table',
  `permission` VARCHAR(20) NOT NULL COMMENT 'permission for an user with an account',
  INDEX `fk_user_has_account_account1_idx` (`account_id` ASC) VISIBLE,
  INDEX `fk_user_has_account_user1_idx` (`user_id` ASC) VISIBLE,
  PRIMARY KEY (`user_id`, `account_id`),
  CONSTRAINT `fk_user_has_account_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `famcial`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_account_account1`
    FOREIGN KEY (`account_id`)
    REFERENCES `famcial`.`account` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
